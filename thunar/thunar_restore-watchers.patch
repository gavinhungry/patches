diff -ru thunar.ORIG/src/thunar-4.16.8/thunar/thunar-shortcuts-model.c thunar/src/thunar-4.16.8/thunar/thunar-shortcuts-model.c
--- thunar.ORIG/src/thunar-4.16.8/thunar/thunar-shortcuts-model.c	2021-05-06 16:23:05.256867618 -0700
+++ thunar/src/thunar-4.16.8/thunar/thunar-shortcuts-model.c	2021-05-06 16:23:06.086857369 -0700
@@ -132,6 +132,10 @@
                                                                      GFile                     *other_file,
                                                                      GFileMonitorEvent          event_type,
                                                                      gpointer                   user_data);
+static void               thunar_shortcuts_model_file_changed       (ThunarFile                *file,
+                                                                     ThunarShortcutsModel      *model);
+static void               thunar_shortcuts_model_file_destroy       (ThunarFile                *file,
+                                                                     ThunarShortcutsModel      *model);
 static void               thunar_shortcuts_model_device_added       (ThunarDeviceMonitor       *device_monitor,
                                                                      ThunarDevice              *device,
                                                                      ThunarShortcutsModel      *model);
@@ -1219,6 +1223,19 @@
         thunar_file_watch (shortcut->file);
     }
 
+  /* we want to stay informed about changes to the file */
+  if (G_LIKELY (shortcut->file != NULL))
+    {
+      /* watch the file for changes */
+      thunar_file_watch (shortcut->file);
+
+      /* connect appropriate signals */
+      g_signal_connect (G_OBJECT (shortcut->file), "changed",
+                        G_CALLBACK (thunar_shortcuts_model_file_changed), model);
+      g_signal_connect (G_OBJECT (shortcut->file), "destroy",
+                        G_CALLBACK (thunar_shortcuts_model_file_destroy), model);
+    }
+
   if (path == NULL)
     {
       /* insert the new shortcut to the shortcuts list */
@@ -1320,9 +1337,6 @@
   _thunar_return_if_fail (THUNAR_IS_SHORTCUTS_MODEL (model));
   _thunar_return_if_fail (name == NULL || g_utf8_validate (name, -1, NULL));
 
-  shortcut = g_slice_new0 (ThunarShortcut);
-  shortcut->group = THUNAR_SHORTCUT_GROUP_PLACES_BOOKMARKS;
-  shortcut->location = g_object_ref (file_path);
 
   /* handle local and remote files differently */
   /* If we dont have a thunar-file, we need to set the gicon manually */
@@ -1331,21 +1345,42 @@
       /* try to open the file corresponding to the uri */
       file = thunar_file_get (file_path, NULL);
       if (G_UNLIKELY (file == NULL))
-          shortcut->gicon = g_themed_icon_new ("folder");
-      else
+        return;
+
+      /* make sure the file refers to a directory */
+      if (G_UNLIKELY (thunar_file_is_directory (file)))
+        {
+          /* create the shortcut entry */
+          shortcut = g_slice_new0 (ThunarShortcut);
+          shortcut->group = THUNAR_SHORTCUT_GROUP_PLACES_BOOKMARKS;
           shortcut->file = file;
+          shortcut->sort_id = row_num;
+          shortcut->hidden = thunar_shortcuts_model_get_hidden (model, shortcut);
+          shortcut->name = g_strdup (name);
+
+          /* append the shortcut to the list */
+          thunar_shortcuts_model_add_shortcut (model, shortcut);
+        }
+      else
+        {
+          g_object_unref (file);
+        }
     }
   else
     {
+      /* create the shortcut entry */
+      shortcut = g_slice_new0 (ThunarShortcut);
+      shortcut->group = THUNAR_SHORTCUT_GROUP_PLACES_BOOKMARKS;
       shortcut->gicon = g_themed_icon_new ("folder-remote");
-    }
+      shortcut->location = g_object_ref (file_path);
 
-  shortcut->sort_id = row_num;
-  shortcut->hidden = thunar_shortcuts_model_get_hidden (model, shortcut);
-  shortcut->name = g_strdup (name);
+      shortcut->sort_id = row_num;
+      shortcut->hidden = thunar_shortcuts_model_get_hidden (model, shortcut);
+      shortcut->name = g_strdup (name);
 
-  /* append the shortcut to the list */
-  thunar_shortcuts_model_add_shortcut (model, shortcut);
+      /* append the shortcut to the list */
+      thunar_shortcuts_model_add_shortcut (model, shortcut);
+    }
 }
 
 
@@ -1517,6 +1552,74 @@
 
 
 static void
+thunar_shortcuts_model_file_changed (ThunarFile           *file,
+                                     ThunarShortcutsModel *model)
+{
+  ThunarShortcut *shortcut;
+  GtkTreePath    *path;
+  GtkTreeIter     iter;
+  GList          *lp;
+  gint            idx;
+
+  _thunar_return_if_fail (THUNAR_IS_FILE (file));
+  _thunar_return_if_fail (THUNAR_IS_SHORTCUTS_MODEL (model));
+
+  /* check if the file still refers to a directory or a not mounted URI,
+   * otherwise we cannot keep it on the shortcuts list, and so we'll treat
+   * it like the file was destroyed (and thereby removed) */
+
+  if (G_UNLIKELY (!thunar_file_is_directory (file)))
+    {
+      thunar_shortcuts_model_file_destroy (file, model);
+      return;
+    }
+
+  for (idx = 0, lp = model->shortcuts; lp != NULL; ++idx, lp = lp->next)
+    {
+      shortcut = THUNAR_SHORTCUT (lp->data);
+      if (shortcut->file == file)
+        {
+          GTK_TREE_ITER_INIT (iter, model->stamp, lp);
+
+          path = gtk_tree_path_new_from_indices (idx, -1);
+          gtk_tree_model_row_changed (GTK_TREE_MODEL (model), path, &iter);
+          gtk_tree_path_free (path);
+          break;
+        }
+    }
+}
+
+
+
+static void
+thunar_shortcuts_model_file_destroy (ThunarFile           *file,
+                                     ThunarShortcutsModel *model)
+{
+  ThunarShortcut *shortcut = NULL;
+  GList          *lp;
+
+  _thunar_return_if_fail (THUNAR_IS_FILE (file));
+  _thunar_return_if_fail (THUNAR_IS_SHORTCUTS_MODEL (model));
+
+  /* lookup the shortcut matching the file */
+  for (lp = model->shortcuts; lp != NULL; lp = lp->next)
+    {
+      shortcut = THUNAR_SHORTCUT (lp->data);
+      if (shortcut->file == file)
+        break;
+    }
+
+  /* verify that we actually found a shortcut */
+  _thunar_assert (lp != NULL);
+  _thunar_assert (THUNAR_IS_FILE (shortcut->file));
+
+  /* drop the shortcut from the model */
+  thunar_shortcuts_model_remove_shortcut (model, shortcut);
+}
+
+
+
+static void
 thunar_shortcuts_model_device_added (ThunarDeviceMonitor  *device_monitor,
                                      ThunarDevice         *device,
                                      ThunarShortcutsModel *model)
@@ -1650,10 +1753,13 @@
 {
   if (G_LIKELY (shortcut->file != NULL))
     {
-      /* drop the file watch on trash */
-      if (thunar_g_file_is_trash (thunar_file_get_file (shortcut->file)))
-        thunar_file_unwatch (shortcut->file);
+      /* drop the file watch */
+      thunar_file_unwatch (shortcut->file);
 
+      /* unregister from the file */
+      g_signal_handlers_disconnect_matched (shortcut->file,
+                                            G_SIGNAL_MATCH_DATA, 0,
+                                            0, NULL, NULL, model);
       g_object_unref (shortcut->file);
     }
 
