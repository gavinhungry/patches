diff -ru pakku.ORIG/src/pakku-0.13/doc/pakku.conf.5.in pakku/src/pakku-0.13/doc/pakku.conf.5.in
--- pakku.ORIG/src/pakku-0.13/doc/pakku.conf.5.in	2019-02-12 11:50:17.611708861 -0800
+++ pakku/src/pakku-0.13/doc/pakku.conf.5.in	2019-02-12 11:50:17.618375302 -0800
@@ -78,6 +78,11 @@
 Print warnings during upgrade operation when foreign packages were not found in AUR\&.
 .RE
 .PP
+\fBPrintLocalIsNewer\fR
+.RS 4
+Print warnings during upgrade operation when local packages are newer than those found in remote repositories\&.
+.RE
+.PP
 \fBSudoExec\fR
 .RS 4
 Automatically exec the program from root via sudo if it is necessary, allowing you to enter password for sudo only once\&.
diff -ru pakku.ORIG/src/pakku-0.13/pakku.conf pakku/src/pakku-0.13/pakku.conf
--- pakku.ORIG/src/pakku-0.13/pakku.conf	2019-02-12 11:50:17.611708861 -0800
+++ pakku/src/pakku-0.13/pakku.conf	2019-02-12 11:50:17.618375302 -0800
@@ -9,6 +9,7 @@
 CheckIgnored
 #IgnoreArch
 PrintAurNotFound
+PrintLocalIsNewer
 #SudoExec
 #ViewNoDefault
 
diff -ru pakku.ORIG/src/pakku-0.13/src/config.nim pakku/src/pakku-0.13/src/config.nim
--- pakku.ORIG/src/pakku-0.13/src/config.nim	2019-02-12 11:50:17.611708861 -0800
+++ pakku/src/pakku-0.13/src/config.nim	2019-02-12 11:50:17.618375302 -0800
@@ -47,6 +47,7 @@
     checkIgnored*: bool
     ignoreArch*: bool
     printAurNotFound*: bool
+    printLocalIsNewer*: bool
     sudoExec*: bool
     viewNoDefault*: bool
     preserveBuilt*: PreserveBuilt
@@ -155,6 +156,7 @@
   let checkIgnored = options.hasKey("CheckIgnored")
   let ignoreArch = options.hasKey("IgnoreArch")
   let printAurNotFound = options.hasKey("PrintAurNotFound")
+  let printLocalIsNewer = options.hasKey("PrintLocalIsNewer")
   let sudoExec = options.hasKey("SudoExec")
   let viewNoDefault = options.hasKey("ViewNoDefault")
   let preserveBuilt = toSeq(enumerate[PreserveBuilt]())
@@ -179,8 +181,8 @@
     userCacheCurrent: userCacheCurrent, tmpRootInitial: tmpRootInitial,
     tmpRootCurrent: tmpRootCurrent, color: color, aurRepo: aurRepo, aurComments: aurComments,
     checkIgnored: checkIgnored, ignoreArch: ignoreArch, printAurNotFound: printAurNotFound,
-    sudoExec: sudoExec, viewNoDefault: viewNoDefault, preserveBuilt: preserveBuilt,
-    preBuildCommand: preBuildCommand)
+    printLocalIsNewer: printLocalIsNewer, sudoExec: sudoExec, viewNoDefault: viewNoDefault,
+    preserveBuilt: preserveBuilt, preBuildCommand: preBuildCommand)
 
 template withAlpmConfig*(config: Config, passDbs: bool,
   handle: untyped, alpmDbs: untyped, errors: untyped, body: untyped): untyped =
diff -ru pakku.ORIG/src/pakku-0.13/src/feature/syncinstall.nim pakku/src/pakku-0.13/src/feature/syncinstall.nim
--- pakku.ORIG/src/pakku-0.13/src/feature/syncinstall.nim	2019-02-12 11:50:17.615042081 -0800
+++ pakku/src/pakku-0.13/src/feature/syncinstall.nim	2019-02-12 11:50:17.618375302 -0800
@@ -1032,7 +1032,7 @@
         not rpcInfoTable.hasKey(inst.name):
         printWarning(config.color, tr"$# was not found in AUR" % [inst.name])
 
-  if upgradeCount == 1:
+  if upgradeCount == 1 and config.printLocalIsNewer:
     for localIsNewer in localIsNewerSeq:
       printWarning(config.color, tra("%s: local (%s) is newer than %s (%s)\n") %
         [localIsNewer.name, localIsNewer.version, config.aurRepo, localIsNewer.aurVersion])
