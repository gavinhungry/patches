diff --color -ru firefox.ORIG/src/firefox-130.0/toolkit/components/remote/nsDBusRemoteServer.cpp firefox/src/firefox-130.0/toolkit/components/remote/nsDBusRemoteServer.cpp
--- firefox.ORIG/src/firefox-130.0/toolkit/components/remote/nsDBusRemoteServer.cpp	2024-09-09 15:30:45.432334021 -0700
+++ firefox/src/firefox-130.0/toolkit/components/remote/nsDBusRemoteServer.cpp	2024-09-09 15:31:26.779675570 -0700
@@ -47,7 +47,11 @@
     return false;
   }
 
-  HandleCommandLine(aParam, gtk_get_current_event_time());
+  guint32 timestamp = gtk_get_current_event_time();
+  if (timestamp == GDK_CURRENT_TIME) {
+    timestamp = guint32(g_get_monotonic_time() / 1000);
+  }
+  HandleCommandLine(aParam, timestamp);
   return true;
 }
 
diff --color -ru firefox.ORIG/src/firefox-130.0/widget/gtk/nsWindow.cpp firefox/src/firefox-130.0/widget/gtk/nsWindow.cpp
--- firefox.ORIG/src/firefox-130.0/widget/gtk/nsWindow.cpp	2024-09-09 15:30:45.358999491 -0700
+++ firefox/src/firefox-130.0/widget/gtk/nsWindow.cpp	2024-09-09 15:33:33.248406598 -0700
@@ -3122,18 +3122,6 @@
             return t;
           }
         }
-#if defined(MOZ_X11)
-        // If it's X11 and there's a startup token, use GDK_CURRENT_TIME, so
-        // gtk_window_present_with_time will pull the timestamp from the startup
-        // token.
-        if (GdkIsX11Display()) {
-          nsGTKToolkit* toolkit = nsGTKToolkit::GetToolkit();
-          const auto& startupToken = toolkit->GetStartupToken();
-          if (!startupToken.IsEmpty()) {
-            return static_cast<uint32_t>(GDK_CURRENT_TIME);
-          }
-        }
-#endif
         return GetLastUserInputTime();
       }();
 
