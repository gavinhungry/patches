diff --color -ru parcellite.ORIG/src/parcellite-1.2.2/src/main.c parcellite/src/parcellite-1.2.2/src/main.c
--- parcellite.ORIG/src/parcellite-1.2.2/src/main.c	2021-12-31 20:28:02.820664793 -0800
+++ parcellite/src/parcellite-1.2.2/src/main.c	2021-12-31 20:43:33.182590843 -0800
@@ -1974,13 +1974,6 @@
     /** if (get_pref_int32("reverse_history"))
       history_list = g_list_reverse(history_list);*/
   }
-  else
-  {
-    /* Nothing in history so adding empty */
-    menu_item = gtk_menu_item_new_with_label(_("Empty"));
-    gtk_widget_set_sensitive(menu_item, FALSE);
-    gtk_menu_shell_append((GtkMenuShell*)menu, menu_item);
-  }
 	if (!get_pref_int32("reverse_history")) {
 		lhist = g_list_reverse(lhist);
 		persistent = g_list_reverse(persistent);
@@ -2001,7 +1994,9 @@
 	}
 	
   /* -------------------- */
-  gtk_menu_shell_append((GtkMenuShell*)menu, gtk_separator_menu_item_new());
+	if ((history_list != NULL) && (history_list->data != NULL)) {
+		gtk_menu_shell_append((GtkMenuShell*)menu, gtk_separator_menu_item_new());
+	}
 	
 	if(get_pref_int32("type_search")){
     /* Edit clipboard */
@@ -2010,11 +2005,7 @@
     gtk_image_menu_item_set_image((GtkImageMenuItem*)h.title_item, menu_image);
     gtk_menu_shell_append((GtkMenuShell*)menu, h.title_item);    
   }else{
-    menu_item = gtk_image_menu_item_new_with_mnemonic(_("_Edit Clipboard"));
     menu_image = gtk_image_new_from_stock(GTK_STOCK_EDIT, GTK_ICON_SIZE_MENU);
-    gtk_image_menu_item_set_image((GtkImageMenuItem*)menu_item, menu_image);
-		g_signal_connect((GObject*)menu_item, "activate", (GCallback)edit_selected, (gpointer)&h); 
-    gtk_menu_shell_append((GtkMenuShell*)menu, menu_item);
 		menu_item = gtk_image_menu_item_new_with_mnemonic(_("_Clear"));
 		/* Clear */
 	  menu_image = gtk_image_new_from_stock(GTK_STOCK_CLEAR, GTK_ICON_SIZE_MENU);
@@ -2028,12 +2019,7 @@
 	g_signal_connect(menu,"selection-done",(GCallback)destroy_history_menu,(gpointer)&h);
   /* Popup the menu... */
   gtk_widget_show_all(menu);
-  gtk_menu_popup((GtkMenu*)menu, NULL, NULL, get_pref_int32("history_pos")?postition_history:NULL, NULL, 1, gtk_get_current_event_time());
-	/**set last entry at first -fixes bug 2974614 */
-	if(get_pref_int32("reverse_history") && NULL != h.clip_item)
-		gtk_menu_shell_select_item((GtkMenuShell*)menu,h.clip_item);
-	else	
-		gtk_menu_shell_select_first((GtkMenuShell*)menu, TRUE);
+  gtk_menu_popup((GtkMenu*)menu, NULL, NULL, gtk_status_icon_position_menu, status_icon, 1, gtk_get_current_event_time());
   /* Return FALSE so the g_timeout_add() function is called only once */
   return FALSE;
 }
@@ -2064,7 +2050,7 @@
 ****************************************************************************/
 void _show_history_menu (GtkMenuItem *m, gpointer data)
 {
-	g_timeout_add(POPUP_DELAY, show_history_menu, GINT_TO_POINTER(figure_histories()));
+	show_history_menu(GINT_TO_POINTER(figure_histories()));
 }
 /***************************************************************************/
 /** .
@@ -2110,7 +2096,7 @@
   gtk_menu_shell_append((GtkMenuShell*)menu, menu_item);
   /* Popup the menu... */
   gtk_widget_show_all(menu);
-  gtk_menu_popup((GtkMenu*)menu, NULL, NULL, NULL, NULL, button, activate_time);	
+	gtk_menu_popup((GtkMenu*)menu, NULL, NULL, gtk_status_icon_position_menu, status_icon, button, activate_time);
 	return menu;
 }
 
@@ -2133,13 +2119,13 @@
 		g_fprintf(stderr,"Got Ctrl-click\n");
     if (actions_lock == FALSE)
     {
-      g_timeout_add(POPUP_DELAY, show_actions_menu, NULL);
+      show_actions_menu(NULL);
     }
   }
   /* Normal click */
   else
   {
-    g_timeout_add(POPUP_DELAY, show_history_menu, GINT_TO_POINTER(figure_histories()));
+    show_history_menu(GINT_TO_POINTER(figure_histories()));
   }
 }
 /***************************************************************************/
@@ -2193,19 +2179,19 @@
 /* Called when history global hotkey is pressed */
 void history_hotkey(char *keystring, gpointer user_data)
 {
-  g_timeout_add(POPUP_DELAY, show_history_menu, GINT_TO_POINTER(figure_histories()));
+  show_history_menu(GINT_TO_POINTER(figure_histories()));
 }
 /* Called when persistent history global hotkey is pressed */
 void phistory_hotkey(char *keystring, gpointer user_data)
 {
 	if(get_pref_int32("persistent_history") && get_pref_int32("persistent_separate"))
-    g_timeout_add(POPUP_DELAY, show_history_menu, GINT_TO_POINTER(HIST_DISPLAY_PERSISTENT));
+    show_history_menu(GINT_TO_POINTER(HIST_DISPLAY_PERSISTENT));
 }
 
 /* Called when actions global hotkey is pressed */
 void actions_hotkey(char *keystring, gpointer user_data)
 {
-  g_timeout_add(POPUP_DELAY, show_actions_menu, NULL);
+  show_actions_menu(NULL);
 }
 
 /* Called when actions global hotkey is pressed */
