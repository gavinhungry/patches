diff -ru rhythmbox.ORIG/src/rhythmbox/plugins/iradio/rb-iradio-source.c rhythmbox/src/rhythmbox/plugins/iradio/rb-iradio-source.c
--- rhythmbox.ORIG/src/rhythmbox/plugins/iradio/rb-iradio-source.c	2024-11-22 14:42:56.672508109 -0800
+++ rhythmbox/src/rhythmbox/plugins/iradio/rb-iradio-source.c	2024-11-22 14:42:56.695841657 -0800
@@ -275,7 +275,7 @@
 	RB_CHAIN_GOBJECT_METHOD (rb_iradio_source_parent_class, constructed, object);
 	source = RB_IRADIO_SOURCE (object);
 
-	paned = gtk_paned_new (GTK_ORIENTATION_HORIZONTAL);
+	paned = gtk_paned_new (GTK_ORIENTATION_VERTICAL);
 
 	g_object_get (source, "shell", &shell, NULL);
 	g_object_get (shell,
@@ -300,7 +300,6 @@
 						    FALSE, FALSE);
 
 	rb_entry_view_append_column (source->priv->stations, RB_ENTRY_VIEW_COL_TITLE, TRUE);
-	rb_entry_view_append_column (source->priv->stations, RB_ENTRY_VIEW_COL_GENRE, FALSE);
 /* 	rb_entry_view_append_column (source->priv->stations, RB_ENTRY_VIEW_COL_QUALITY, FALSE); */
 	rb_entry_view_append_column (source->priv->stations, RB_ENTRY_VIEW_COL_RATING, FALSE);
 /*	rb_entry_view_append_column (source->priv->stations, RB_ENTRY_VIEW_COL_PLAY_COUNT, FALSE);*/
diff -ru rhythmbox.ORIG/src/rhythmbox/plugins/iradio/rb-station-properties-dialog.c rhythmbox/src/rhythmbox/plugins/iradio/rb-station-properties-dialog.c
--- rhythmbox.ORIG/src/rhythmbox/plugins/iradio/rb-station-properties-dialog.c	2024-11-22 14:42:56.672508109 -0800
+++ rhythmbox/src/rhythmbox/plugins/iradio/rb-station-properties-dialog.c	2024-11-22 14:42:56.695841657 -0800
@@ -493,7 +493,7 @@
 static void
 rb_station_properties_dialog_update_last_played (RBStationPropertiesDialog *dialog)
 {
-	const char *last_played = _("Never");
+	const char *last_played = _("");
 
 	if (dialog->priv->current_entry)
 		last_played = rhythmdb_entry_get_string (dialog->priv->current_entry, RHYTHMDB_PROP_LAST_PLAYED_STR);
diff -ru rhythmbox.ORIG/src/rhythmbox/podcast/rb-podcast-source.c rhythmbox/src/rhythmbox/podcast/rb-podcast-source.c
--- rhythmbox.ORIG/src/rhythmbox/podcast/rb-podcast-source.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/podcast/rb-podcast-source.c	2024-11-22 14:42:56.695841657 -0800
@@ -1379,14 +1379,13 @@
 
 	source->priv->paned = gtk_paned_new (GTK_ORIENTATION_VERTICAL);
 
-
 	/* set up posts view */
 	source->priv->posts = rb_entry_view_new (source->priv->db,
 						 G_OBJECT (shell_player),
 						 TRUE, FALSE);
 	g_object_unref (shell_player);
 
-	/* Podcast date column */
+	/* COLUMN FEED */
 	column = gtk_tree_view_column_new ();
 	renderer = gtk_cell_renderer_text_new();
 
@@ -1395,26 +1394,18 @@
 	gtk_tree_view_column_set_clickable (column, TRUE);
 	gtk_tree_view_column_set_resizable (column, TRUE);
 	gtk_tree_view_column_set_sizing (column, GTK_TREE_VIEW_COLUMN_FIXED);
-	{
-		const char *sample_strings[3];
-		sample_strings[0] = _("Date");
-		sample_strings[1] = rb_entry_view_get_time_date_column_sample ();
-		sample_strings[2] = NULL;
-		rb_entry_view_set_fixed_column_width (source->priv->posts, column, renderer, sample_strings);
-	}
+	gtk_tree_view_column_set_expand (column, TRUE);
 
 	gtk_tree_view_column_set_cell_data_func (column, renderer,
-						 (GtkTreeCellDataFunc) podcast_post_date_cell_data_func,
+						 (GtkTreeCellDataFunc) podcast_post_feed_cell_data_func,
 						 source, NULL);
 
 	rb_entry_view_append_column_custom (source->priv->posts, column,
-					    _("Date"), "Date",
-					    (GCompareDataFunc) podcast_post_date_sort_func,
+					    _("Feed"), "Feed",
+					    (GCompareDataFunc) podcast_post_feed_sort_func,
 					    0, NULL);
 
-	rb_entry_view_append_column (source->priv->posts, RB_ENTRY_VIEW_COL_TITLE, TRUE);
-
-	/* COLUMN FEED */
+	/* Podcast date column */
 	column = gtk_tree_view_column_new ();
 	renderer = gtk_cell_renderer_text_new();
 
@@ -1423,21 +1414,26 @@
 	gtk_tree_view_column_set_clickable (column, TRUE);
 	gtk_tree_view_column_set_resizable (column, TRUE);
 	gtk_tree_view_column_set_sizing (column, GTK_TREE_VIEW_COLUMN_FIXED);
-	gtk_tree_view_column_set_expand (column, TRUE);
+	{
+		const char *sample_strings[3];
+		sample_strings[0] = _("Date");
+		sample_strings[1] = rb_entry_view_get_time_date_column_sample ();
+		sample_strings[2] = NULL;
+		rb_entry_view_set_fixed_column_width (source->priv->posts, column, renderer, sample_strings);
+	}
 
 	gtk_tree_view_column_set_cell_data_func (column, renderer,
-						 (GtkTreeCellDataFunc) podcast_post_feed_cell_data_func,
+						 (GtkTreeCellDataFunc) podcast_post_date_cell_data_func,
 						 source, NULL);
 
 	rb_entry_view_append_column_custom (source->priv->posts, column,
-					    _("Feed"), "Feed",
-					    (GCompareDataFunc) podcast_post_feed_sort_func,
+					    _("Date"), "Date",
+					    (GCompareDataFunc) podcast_post_date_sort_func,
 					    0, NULL);
 
+	rb_entry_view_append_column (source->priv->posts, RB_ENTRY_VIEW_COL_TITLE, TRUE);
 	rb_entry_view_append_column (source->priv->posts, RB_ENTRY_VIEW_COL_DURATION, FALSE);
 	rb_entry_view_append_column (source->priv->posts, RB_ENTRY_VIEW_COL_RATING, FALSE);
-	rb_entry_view_append_column (source->priv->posts, RB_ENTRY_VIEW_COL_PLAY_COUNT, FALSE);
-	rb_entry_view_append_column (source->priv->posts, RB_ENTRY_VIEW_COL_LAST_PLAYED, FALSE);
 
 	/* Status column */
 	column = gtk_tree_view_column_new ();
@@ -1447,6 +1443,7 @@
 
 	gtk_tree_view_column_set_clickable (column, TRUE);
 	gtk_tree_view_column_set_sizing (column, GTK_TREE_VIEW_COLUMN_FIXED);
+	gtk_tree_view_column_set_fixed_width (column, 120);
 
 	{
 		static const char *status_strings[6];
diff -ru rhythmbox.ORIG/src/rhythmbox/rhythmdb/rhythmdb.c rhythmbox/src/rhythmbox/rhythmdb/rhythmdb.c
--- rhythmbox.ORIG/src/rhythmbox/rhythmdb/rhythmdb.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/rhythmdb/rhythmdb.c	2024-11-22 14:42:56.695841657 -0800
@@ -3847,7 +3847,7 @@
 	char *val;
 
 	if (never == NULL)
-		never = _("Never");
+		never = _("");
 
 	switch (propid) {
 	case RHYTHMDB_PROP_LAST_PLAYED_STR:
diff -ru rhythmbox.ORIG/src/rhythmbox/sources/rb-browser-source.c rhythmbox/src/rhythmbox/sources/rb-browser-source.c
--- rhythmbox.ORIG/src/rhythmbox/sources/rb-browser-source.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/sources/rb-browser-source.c	2024-11-22 14:42:56.695841657 -0800
@@ -348,16 +348,16 @@
 	source->priv->songs = rb_entry_view_new (source->priv->db, shell_player,
 						 TRUE, FALSE);
 
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ARTIST, FALSE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_YEAR, FALSE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ALBUM, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_TRACK_NUMBER, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_TITLE, TRUE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_DURATION, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_GENRE, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ARTIST, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ALBUM, FALSE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_PLAY_COUNT, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_COMPOSER, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_YEAR, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_DURATION, FALSE);
  	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_QUALITY, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_PLAY_COUNT, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_BPM, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_COMMENT, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_LOCATION, FALSE);
diff -ru rhythmbox.ORIG/src/rhythmbox/sources/rb-library-source.c rhythmbox/src/rhythmbox/sources/rb-library-source.c
--- rhythmbox.ORIG/src/rhythmbox/sources/rb-library-source.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/sources/rb-library-source.c	2024-11-22 14:42:56.695841657 -0800
@@ -413,7 +413,7 @@
 	rb_application_link_shared_menus (RB_APPLICATION (g_application_get_default ()), toolbar);
 
 	source = RB_SOURCE (g_object_new (RB_TYPE_LIBRARY_SOURCE,
-					  "name", _("Music"),
+					  "name", _("Library"),
 					  "entry-type", RHYTHMDB_ENTRY_TYPE_SONG,
 					  "shell", shell,
 					  "load-status", RB_SOURCE_LOAD_STATUS_LOADING,
diff -ru rhythmbox.ORIG/src/rhythmbox/sources/rb-missing-files-source.c rhythmbox/src/rhythmbox/sources/rb-missing-files-source.c
--- rhythmbox.ORIG/src/rhythmbox/sources/rb-missing-files-source.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/sources/rb-missing-files-source.c	2024-11-22 14:42:56.695841657 -0800
@@ -173,11 +173,11 @@
 
 	rb_entry_view_set_model (source->priv->view, model);
 
+	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_ARTIST, FALSE);
+	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_ALBUM, FALSE);
 	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_TRACK_NUMBER, FALSE);
 	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_TITLE, TRUE);
 /*	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_GENRE, FALSE); */
-	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_ARTIST, FALSE);
-	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_ALBUM, FALSE);
 	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_LOCATION, TRUE);
 	rb_entry_view_append_column (source->priv->view, RB_ENTRY_VIEW_COL_LAST_SEEN, TRUE);
 
diff -ru rhythmbox.ORIG/src/rhythmbox/sources/rb-playlist-source.c rhythmbox/src/rhythmbox/sources/rb-playlist-source.c
--- rhythmbox.ORIG/src/rhythmbox/sources/rb-playlist-source.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/sources/rb-playlist-source.c	2024-11-22 14:42:56.695841657 -0800
@@ -337,18 +337,12 @@
 	g_object_unref (query_model);
 
 	{
-		const char *title = "";
+		const char *title = "Index";
 		const char *strings[3] = {0};
 
 		GtkTreeViewColumn *column = gtk_tree_view_column_new ();
 		GtkCellRenderer *renderer = gtk_cell_renderer_text_new ();
 
-		g_object_set(renderer,
-			     "style", PANGO_STYLE_OBLIQUE,
-			     "weight", PANGO_WEIGHT_LIGHT,
-			     "xalign", 1.0,
-			     NULL);
-
 		gtk_tree_view_column_pack_start (column, renderer, TRUE);
 
 		gtk_tree_view_column_set_resizable (column, TRUE);
@@ -366,20 +360,20 @@
 						    "PlaylistTrack", NULL, 0, NULL, 0);
 	}
 
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ARTIST, FALSE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_YEAR, FALSE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ALBUM, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_TRACK_NUMBER, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_TITLE, TRUE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_DURATION, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_GENRE, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ARTIST, FALSE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_PLAY_COUNT, FALSE);
+	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_LAST_PLAYED, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_COMPOSER, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_ALBUM, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_YEAR, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_DURATION, FALSE);
  	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_QUALITY, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_RATING, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_PLAY_COUNT, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_COMMENT, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_LOCATION, FALSE);
-	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_LAST_PLAYED, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_FIRST_SEEN, FALSE);
 	rb_entry_view_append_column (source->priv->songs, RB_ENTRY_VIEW_COL_BPM, FALSE);
 	rb_entry_view_set_columns_clickable (source->priv->songs, FALSE);
diff -ru rhythmbox.ORIG/src/rhythmbox/sources/rb-play-queue-source.c rhythmbox/src/rhythmbox/sources/rb-play-queue-source.c
--- rhythmbox.ORIG/src/rhythmbox/sources/rb-play-queue-source.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/sources/rb-play-queue-source.c	2024-11-22 14:42:56.695841657 -0800
@@ -296,7 +296,7 @@
 						 rb_play_queue_source_track_info_cell_data_func,
 						 source, NULL);
 	rb_entry_view_append_column_custom (priv->sidebar, priv->sidebar_column,
-					    _("Play Queue"), "Title", NULL, 0, NULL);
+					    _("Queue"), "Title", NULL, 0, NULL);
 	rb_entry_view_set_columns_clickable (priv->sidebar, FALSE);
 	rb_playlist_source_setup_entry_view (RB_PLAYLIST_SOURCE (source), priv->sidebar);
 
@@ -398,7 +398,7 @@
 	rb_application_link_shared_menus (RB_APPLICATION (g_application_get_default ()), toolbar);
 
 	source = RB_SOURCE (g_object_new (RB_TYPE_PLAY_QUEUE_SOURCE,
-					  "name", _("Play Queue"),
+					  "name", _("Queue"),
 					  "shell", shell,
 					  "is-local", TRUE,
 					  "entry-type", NULL,
@@ -514,7 +514,7 @@
 {
 	RBPlayQueueSourcePrivate *priv = RB_PLAY_QUEUE_SOURCE_GET_PRIVATE (source);
 	RhythmDBQueryModel *model;
-	char *name = _("Play Queue");
+	char *name = _("Queue");
 	int count;
        
 	model = rb_playlist_source_get_query_model (RB_PLAYLIST_SOURCE (source));
diff -ru rhythmbox.ORIG/src/rhythmbox/widgets/rb-entry-view.c rhythmbox/src/rhythmbox/widgets/rb-entry-view.c
--- rhythmbox.ORIG/src/rhythmbox/widgets/rb-entry-view.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/widgets/rb-entry-view.c	2024-11-22 14:42:56.695841657 -0800
@@ -910,6 +910,8 @@
 {
 	RhythmDBEntry *entry;
 	char *str;
+
+	gulong disc_no;
 	gulong val;
 
 	entry = rhythmdb_query_model_iter_to_entry (data->view->priv->model, iter);
@@ -917,7 +919,18 @@
 	val = rhythmdb_entry_get_ulong (entry, data->propid);
 
 	if (val > 0)
-		str = g_strdup_printf ("%lu", val);
+
+		if (data->propid == RHYTHMDB_PROP_TRACK_NUMBER) {
+	    disc_no = rhythmdb_entry_get_ulong (entry, RHYTHMDB_PROP_DISC_NUMBER);
+
+	    if (disc_no > 1) {
+	      str = g_strdup_printf ("%lu%02lu", disc_no, val);
+	    } else {
+	    	str = g_strdup_printf ("%02lu", val);
+	    }
+		} else {
+			str = g_strdup_printf ("%lu", val);
+		}
 	else
 		str = g_strdup ("");
 
@@ -941,7 +954,7 @@
 
 	i = rhythmdb_entry_get_ulong (entry, data->propid);
 	if (i == 0)
-		str = _("Never");
+		str = _("");
 	else
 		str = g_strdup_printf ("%ld", i);
 
@@ -1417,7 +1430,7 @@
 	RhythmDBPropType propid;
 	RhythmDBPropType sort_propid = RHYTHMDB_NUM_PROPERTIES;
 	gboolean ellipsize = FALSE;
-	gboolean resizable = TRUE;
+	gboolean resizable = FALSE;
 	gint column_width = -1;
 	gboolean has_numeric_data = FALSE;
 
@@ -1435,6 +1448,7 @@
 		sort_func = (GCompareDataFunc) rhythmdb_query_model_track_sort_func;
 		title = _("Track");
 		key = "Track";
+		column_width = 60;
 		strings[0] = title;
 		strings[1] = "9999";
 		break;
@@ -1486,7 +1500,7 @@
 		sort_func = (GCompareDataFunc) rhythmdb_query_model_genre_sort_func;
 		title = _("Genre");
 		key = "Genre";
-		ellipsize = TRUE;
+		column_width = 130;
 		break;
 	case RB_ENTRY_VIEW_COL_COMMENT:
 		propid = RHYTHMDB_PROP_COMMENT;
@@ -1507,6 +1521,7 @@
 		sort_func = (GCompareDataFunc) rhythmdb_query_model_ulong_sort_func;
 		title = _("Time");
 		key = "Time";
+		column_width = 60;
 		strings[0] = title;
 		strings[1] = "000:00";
 		strings[2] = _("Unknown");
@@ -1520,6 +1535,7 @@
 		sort_func = (GCompareDataFunc) rhythmdb_query_model_date_sort_func;
 		title = _("Year");
 		key = "Year";
+		column_width = 60;
 		strings[0] = title;
 		strings[1] = "0000";
 		strings[2] = _("Unknown");
@@ -1568,10 +1584,11 @@
 		cell_data_func = (GtkTreeCellDataFunc) rb_entry_view_play_count_cell_data_func;
 		sort_propid = cell_data->propid;
 		sort_func = (GCompareDataFunc) rhythmdb_query_model_ulong_sort_func;
-		title = _("Play Count");
+		title = _("Plays");
 		key = "PlayCount";
+		column_width = 60;
 		strings[0] = title;
-		strings[1] = _("Never");
+		strings[1] = _("");
 		strings[2] = "9999";
 		break;
 	case RB_ENTRY_VIEW_COL_LAST_PLAYED:
@@ -1583,9 +1600,10 @@
 		sort_func = (GCompareDataFunc) rhythmdb_query_model_ulong_sort_func;
 		title = _("Last Played");
 		key = "LastPlayed";
+		column_width = 110;
 		strings[0] = title;
 		strings[1] = rb_entry_view_get_time_date_column_sample ();
-		strings[2] = _("Never");
+		strings[2] = _("");
 		break;
 	case RB_ENTRY_VIEW_COL_FIRST_SEEN:
 		propid = RHYTHMDB_PROP_FIRST_SEEN;
@@ -1696,7 +1714,6 @@
 	 * width of 0.
 	 */
 	if (ellipsize) {
-		g_object_set (renderer, "ellipsize", PANGO_ELLIPSIZE_END, NULL);
 		gtk_tree_view_column_set_expand (GTK_TREE_VIEW_COLUMN (column), TRUE);
 	} else if (column_width != -1) {
 		gtk_tree_view_column_set_fixed_width (column, column_width);
@@ -1827,7 +1844,7 @@
 
 	view->priv->scrolled_window = gtk_scrolled_window_new (NULL, NULL);
 	gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (view->priv->scrolled_window),
-					GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);
+					GTK_POLICY_AUTOMATIC, GTK_POLICY_ALWAYS);
 	gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (view->priv->scrolled_window), GTK_SHADOW_NONE);
 	gtk_widget_show (view->priv->scrolled_window);
 	gtk_container_add (GTK_CONTAINER (view->priv->overlay), view->priv->scrolled_window);
@@ -2567,7 +2584,7 @@
 					     column,
 					     renderer,
 					     strings,
-					     5);
+					     20);
 }
 
 /**
diff -ru rhythmbox.ORIG/src/rhythmbox/widgets/rb-song-info.c rhythmbox/src/rhythmbox/widgets/rb-song-info.c
--- rhythmbox.ORIG/src/rhythmbox/widgets/rb-song-info.c	2024-11-22 14:42:56.679174837 -0800
+++ rhythmbox/src/rhythmbox/widgets/rb-song-info.c	2024-11-22 14:42:56.695841657 -0800
@@ -1541,8 +1541,6 @@
 {
 	const char *str;
 	str = rhythmdb_entry_get_string (song_info->priv->current_entry, RHYTHMDB_PROP_LAST_PLAYED_STR);
-	if (!strcmp ("", str))
-		str = _("Never");
 	gtk_label_set_text (GTK_LABEL (song_info->priv->last_played), str);
 }
 
